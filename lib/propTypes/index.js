'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var RcUpload = {
  component: _propTypes2.default.string,
  style: _propTypes2.default.object,
  prefixCls: _propTypes2.default.string,
  action: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func]),
  name: _propTypes2.default.string,
  multipart: _propTypes2.default.bool,
  directory: _propTypes2.default.bool,
  onError: _propTypes2.default.func,
  onSuccess: _propTypes2.default.func,
  onProgress: _propTypes2.default.func,
  onStart: _propTypes2.default.func,
  data: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.func]),
  headers: _propTypes2.default.object,
  accept: _propTypes2.default.string,
  multiple: _propTypes2.default.bool,
  disabled: _propTypes2.default.bool,
  beforeUpload: _propTypes2.default.func,
  customRequest: _propTypes2.default.func,
  onReady: _propTypes2.default.func,
  withCredentials: _propTypes2.default.bool,
  supportServerRender: _propTypes2.default.bool,
  files: _propTypes2.default.arrayOf(_propTypes2.default.object).isRequired,
  size: _propTypes2.default.number,
  limit: _propTypes2.default.number,
  onRemove: _propTypes2.default.func,
  onClickFile: _propTypes2.default.func,
  onComplete: _propTypes2.default.func,
  getSuccessFileUrl: _propTypes2.default.func
};

var Upload = _extends({}, RcUpload, {

  files: _propTypes2.default.arrayOf(_propTypes2.default.object).isRequired,
  size: _propTypes2.default.number,
  limit: _propTypes2.default.number,
  onRemove: _propTypes2.default.func,
  onClickFile: _propTypes2.default.func,
  onComplete: _propTypes2.default.func,
  getSuccessFileUrl: _propTypes2.default.func
});

exports.default = Upload;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jb21wb25lbnRzL1VwbG9hZC9wcm9wVHlwZXMvaW5kZXguanMiXSwibmFtZXMiOlsiUmNVcGxvYWQiLCJjb21wb25lbnQiLCJQVCIsInN0cmluZyIsInN0eWxlIiwib2JqZWN0IiwicHJlZml4Q2xzIiwiYWN0aW9uIiwib25lT2ZUeXBlIiwiZnVuYyIsIm5hbWUiLCJtdWx0aXBhcnQiLCJib29sIiwiZGlyZWN0b3J5Iiwib25FcnJvciIsIm9uU3VjY2VzcyIsIm9uUHJvZ3Jlc3MiLCJvblN0YXJ0IiwiZGF0YSIsImhlYWRlcnMiLCJhY2NlcHQiLCJtdWx0aXBsZSIsImRpc2FibGVkIiwiYmVmb3JlVXBsb2FkIiwiY3VzdG9tUmVxdWVzdCIsIm9uUmVhZHkiLCJ3aXRoQ3JlZGVudGlhbHMiLCJzdXBwb3J0U2VydmVyUmVuZGVyIiwiZmlsZXMiLCJhcnJheU9mIiwiaXNSZXF1aXJlZCIsInNpemUiLCJudW1iZXIiLCJsaW1pdCIsIm9uUmVtb3ZlIiwib25DbGlja0ZpbGUiLCJvbkNvbXBsZXRlIiwiZ2V0U3VjY2Vzc0ZpbGVVcmwiLCJVcGxvYWQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7Ozs7OztBQUVBLElBQU1BLFdBQVc7QUFDZkMsYUFBV0Msb0JBQUdDLE1BREM7QUFFZkMsU0FBT0Ysb0JBQUdHLE1BRks7QUFHZkMsYUFBV0osb0JBQUdDLE1BSEM7QUFJZkksVUFBUUwsb0JBQUdNLFNBQUgsQ0FBYSxDQUFDTixvQkFBR0MsTUFBSixFQUFZRCxvQkFBR08sSUFBZixDQUFiLENBSk87QUFLZkMsUUFBTVIsb0JBQUdDLE1BTE07QUFNZlEsYUFBV1Qsb0JBQUdVLElBTkM7QUFPZkMsYUFBV1gsb0JBQUdVLElBUEM7QUFRZkUsV0FBU1osb0JBQUdPLElBUkc7QUFTZk0sYUFBV2Isb0JBQUdPLElBVEM7QUFVZk8sY0FBWWQsb0JBQUdPLElBVkE7QUFXZlEsV0FBU2Ysb0JBQUdPLElBWEc7QUFZZlMsUUFBTWhCLG9CQUFHTSxTQUFILENBQWEsQ0FBQ04sb0JBQUdHLE1BQUosRUFBWUgsb0JBQUdPLElBQWYsQ0FBYixDQVpTO0FBYWZVLFdBQVNqQixvQkFBR0csTUFiRztBQWNmZSxVQUFRbEIsb0JBQUdDLE1BZEk7QUFlZmtCLFlBQVVuQixvQkFBR1UsSUFmRTtBQWdCZlUsWUFBVXBCLG9CQUFHVSxJQWhCRTtBQWlCZlcsZ0JBQWNyQixvQkFBR08sSUFqQkY7QUFrQmZlLGlCQUFldEIsb0JBQUdPLElBbEJIO0FBbUJmZ0IsV0FBU3ZCLG9CQUFHTyxJQW5CRztBQW9CZmlCLG1CQUFpQnhCLG9CQUFHVSxJQXBCTDtBQXFCZmUsdUJBQXFCekIsb0JBQUdVLElBckJUO0FBc0JmZ0IsU0FBTzFCLG9CQUFHMkIsT0FBSCxDQUFXM0Isb0JBQUdHLE1BQWQsRUFBc0J5QixVQXRCZDtBQXVCZkMsUUFBTTdCLG9CQUFHOEIsTUF2Qk07QUF3QmZDLFNBQU8vQixvQkFBRzhCLE1BeEJLO0FBeUJmRSxZQUFVaEMsb0JBQUdPLElBekJFO0FBMEJmMEIsZUFBYWpDLG9CQUFHTyxJQTFCRDtBQTJCZjJCLGNBQVlsQyxvQkFBR08sSUEzQkE7QUE0QmY0QixxQkFBbUJuQyxvQkFBR087QUE1QlAsQ0FBakI7O0FBK0JBLElBQU02QixzQkFDRHRDLFFBREM7O0FBR0o0QixTQUFPMUIsb0JBQUcyQixPQUFILENBQVczQixvQkFBR0csTUFBZCxFQUFzQnlCLFVBSHpCO0FBSUpDLFFBQU03QixvQkFBRzhCLE1BSkw7QUFLSkMsU0FBTy9CLG9CQUFHOEIsTUFMTjtBQU1KRSxZQUFVaEMsb0JBQUdPLElBTlQ7QUFPSjBCLGVBQWFqQyxvQkFBR08sSUFQWjtBQVFKMkIsY0FBWWxDLG9CQUFHTyxJQVJYO0FBU0o0QixxQkFBbUJuQyxvQkFBR087QUFUbEIsRUFBTjs7a0JBWWU2QixNIiwiZmlsZSI6ImluZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFBUIGZyb20gJ3Byb3AtdHlwZXMnO1xuXG5jb25zdCBSY1VwbG9hZCA9IHtcbiAgY29tcG9uZW50OiBQVC5zdHJpbmcsXG4gIHN0eWxlOiBQVC5vYmplY3QsXG4gIHByZWZpeENsczogUFQuc3RyaW5nLFxuICBhY3Rpb246IFBULm9uZU9mVHlwZShbUFQuc3RyaW5nLCBQVC5mdW5jXSksXG4gIG5hbWU6IFBULnN0cmluZyxcbiAgbXVsdGlwYXJ0OiBQVC5ib29sLFxuICBkaXJlY3Rvcnk6IFBULmJvb2wsXG4gIG9uRXJyb3I6IFBULmZ1bmMsXG4gIG9uU3VjY2VzczogUFQuZnVuYyxcbiAgb25Qcm9ncmVzczogUFQuZnVuYyxcbiAgb25TdGFydDogUFQuZnVuYyxcbiAgZGF0YTogUFQub25lT2ZUeXBlKFtQVC5vYmplY3QsIFBULmZ1bmNdKSxcbiAgaGVhZGVyczogUFQub2JqZWN0LFxuICBhY2NlcHQ6IFBULnN0cmluZyxcbiAgbXVsdGlwbGU6IFBULmJvb2wsXG4gIGRpc2FibGVkOiBQVC5ib29sLFxuICBiZWZvcmVVcGxvYWQ6IFBULmZ1bmMsXG4gIGN1c3RvbVJlcXVlc3Q6IFBULmZ1bmMsXG4gIG9uUmVhZHk6IFBULmZ1bmMsXG4gIHdpdGhDcmVkZW50aWFsczogUFQuYm9vbCxcbiAgc3VwcG9ydFNlcnZlclJlbmRlcjogUFQuYm9vbCxcbiAgZmlsZXM6IFBULmFycmF5T2YoUFQub2JqZWN0KS5pc1JlcXVpcmVkLFxuICBzaXplOiBQVC5udW1iZXIsXG4gIGxpbWl0OiBQVC5udW1iZXIsXG4gIG9uUmVtb3ZlOiBQVC5mdW5jLFxuICBvbkNsaWNrRmlsZTogUFQuZnVuYyxcbiAgb25Db21wbGV0ZTogUFQuZnVuYyxcbiAgZ2V0U3VjY2Vzc0ZpbGVVcmw6IFBULmZ1bmMsXG59O1xuXG5jb25zdCBVcGxvYWQgPSB7XG4gIC4uLlJjVXBsb2FkLFxuXG4gIGZpbGVzOiBQVC5hcnJheU9mKFBULm9iamVjdCkuaXNSZXF1aXJlZCxcbiAgc2l6ZTogUFQubnVtYmVyLFxuICBsaW1pdDogUFQubnVtYmVyLFxuICBvblJlbW92ZTogUFQuZnVuYyxcbiAgb25DbGlja0ZpbGU6IFBULmZ1bmMsXG4gIG9uQ29tcGxldGU6IFBULmZ1bmMsXG4gIGdldFN1Y2Nlc3NGaWxlVXJsOiBQVC5mdW5jLFxufTtcblxuZXhwb3J0IGRlZmF1bHQgVXBsb2FkO1xuIl19